 //min no.of jumps
#include <stdio.h>
int jumps(int x, int y) { return (x > y) ? x : y; }
int Jumps(int arr[], int n)
{
     if (n <= 1)
        return 0;
     if (arr[0] >= n-1)
          return 1;
     if (arr[0] == 0)
        return -1;
     int Reach = arr[0];
     int step = arr[0];
     int jump = 1;
     int i = 1;
    for (i = 1; i < n; i++) {
        if (i == n - 1)
            return jump;
            if (arr[i] >= (n-1) - i)
              return jump + 1;
             Reach = (Reach, i + arr[i]);
        step--;
        if (step == 0) {
            jump++;
		if (i >= Reach)
                return -1;
            step =Reach - i;
        }
    }
    return -1;
}
int main()
{
    int arr[] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    int size = sizeof(arr) / sizeof(int);
 
    printf(
        " number of jumps to reach end is %d ",
        Jumps(arr, size));
    return 0;
}
